extends layout

block content
  .container(style="max-width: 1200px; margin: 0 auto; padding: 20px;")
    h1(style="text-align: center; color: #2c3e50; margin-bottom: 30px;")
      | üõ∞Ô∏è Dados NASA - Qualidade do Ar

    #loading(style="text-align: center; padding: 40px;")
      h2 Carregando dados...
      p Aguarde enquanto buscamos informa√ß√µes da NASA

    #dados-container(style="display: none;")
      .localizacao(style="background: #ecf0f1; padding: 20px; border-radius: 10px; margin-bottom: 20px;")
        h3(style="margin: 0 0 10px 0;") üìç Localiza√ß√£o Atual
        p#localizacao-texto(style="margin: 0; font-size: 18px;")

      .row(style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;")
        .card.airdust(style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 25px; border-radius: 15px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);")
          h2(style="margin: 0 0 15px 0; font-size: 24px;") üå´Ô∏è Poeira Atmosf√©rica (Airdust)
          #airdust-status
            p.status Carregando...
          #airdust-detalhes(style="margin-top: 15px; font-size: 14px; opacity: 0.9;")

        .card.wildfire(style="background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); color: white; padding: 25px; border-radius: 15px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);")
          h2(style="margin: 0 0 15px 0; font-size: 24px;") üî• Inc√™ndios Florestais (Wildfire)
          #wildfire-status
            p.status Carregando...
          #wildfire-detalhes(style="margin-top: 15px; font-size: 14px; opacity: 0.9;")

      .incendios-lista(style="background: white; padding: 25px; border-radius: 15px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);")
        h3(style="margin: 0 0 15px 0; color: #2c3e50;") üó∫Ô∏è Inc√™ndios Detectados Pr√≥ximos
        #incendios-detalhados
          p(style="color: #7f8c8d;") Nenhum inc√™ndio detectado nas proximidades

      .acoes(style="margin-top: 30px; text-align: center;")
        button#atualizar-btn(style="background: #3498db; color: white; border: none; padding: 15px 40px; font-size: 16px; border-radius: 8px; cursor: pointer; box-shadow: 0 2px 4px rgba(0,0,0,0.2);")
          | üîÑ Atualizar Dados
        p#ultima-atualizacao(style="margin-top: 10px; color: #7f8c8d; font-size: 14px;")

    #erro-container(style="display: none; background: #e74c3c; color: white; padding: 20px; border-radius: 10px; text-align: center;")
      h2 ‚ùå Erro ao carregar dados
      p#erro-mensagem

  script.
    async function carregarDadosNASA() {
      try {
        document.getElementById('loading').style.display = 'block';
        document.getElementById('dados-container').style.display = 'none';
        document.getElementById('erro-container').style.display = 'none';

        // Busca localiza√ß√£o atual
        const locRes = await fetch('/api/localizacao-atual');
        const locData = await locRes.json();

        if (!locData || !locData.lat || !locData.lon) {
          throw new Error('Localiza√ß√£o n√£o detectada. Aguarde alguns segundos e tente novamente.');
        }

        // Busca dados da NASA
        const nasaRes = await fetch('/api/dados-nasa');
        const nasaData = await nasaRes.json();

        if (!nasaData.sucesso) {
          throw new Error(nasaData.erro || 'Erro ao buscar dados da NASA');
        }

        document.getElementById('loading').style.display = 'none';
        document.getElementById('dados-container').style.display = 'block';

        // Atualiza localiza√ß√£o
        document.getElementById('localizacao-texto').textContent =
          `${locData.nome || 'Desconhecido'} (${locData.lat}, ${locData.lon})`;

        // Atualiza Airdust
        const airdust = nasaData.dados.airdust;
        const airdustStatus = document.getElementById('airdust-status');
        const airdustDetalhes = document.getElementById('airdust-detalhes');

        if (airdust.disponivel) {
          const intensidade = airdust.intensidade || 0;
          const nivel = intensidade < 50 ? 'BAIXO' : intensidade < 100 ? 'MODERADO' : intensidade < 150 ? 'ALTO' : 'CR√çTICO';
          const cor = intensidade < 50 ? '#2ecc71' : intensidade < 100 ? '#f39c12' : intensidade < 150 ? '#e67e22' : '#e74c3c';

          airdustStatus.innerHTML = `
            <div style="background: rgba(255,255,255,0.2); padding: 15px; border-radius: 10px;">
              <p style="margin: 0; font-size: 48px; font-weight: bold;">${intensidade.toFixed(1)}</p>
              <p style="margin: 5px 0 0 0; font-size: 18px;">N√≠vel: <strong>${nivel}</strong></p>
            </div>
          `;
          airdustDetalhes.innerHTML = `
            <p style="margin: 5px 0;"><strong>Fonte:</strong> ${airdust.fonte}</p>
            <p style="margin: 5px 0;"><strong>Data:</strong> ${airdust.data}</p>
          `;
        } else {
          airdustStatus.innerHTML = `<p style="background: rgba(255,255,255,0.2); padding: 15px; border-radius: 10px;">‚ùå Dados indispon√≠veis</p>`;
          airdustDetalhes.innerHTML = `<p style="margin: 5px 0; opacity: 0.8;">${airdust.erro || 'Erro desconhecido'}</p>`;
        }

        // Atualiza Wildfire
        const wildfire = nasaData.dados.wildfire;
        const wildfireStatus = document.getElementById('wildfire-status');
        const wildfireDetalhes = document.getElementById('wildfire-detalhes');

        if (wildfire.disponivel) {
          const incendios = wildfire.incendios_detectados || 0;
          const nivelRisco = wildfire.nivel_risco || 'DESCONHECIDO';
          const corRisco = nivelRisco === 'BAIXO' ? '#2ecc71' : nivelRisco === 'MODERADO' ? '#f39c12' : nivelRisco === 'ALTO' ? '#e67e22' : '#e74c3c';

          wildfireStatus.innerHTML = `
            <div style="background: rgba(255,255,255,0.2); padding: 15px; border-radius: 10px;">
              <p style="margin: 0; font-size: 48px; font-weight: bold;">${incendios}</p>
              <p style="margin: 5px 0 0 0; font-size: 18px;">Inc√™ndios detectados</p>
              <p style="margin: 10px 0 0 0; font-size: 20px;"><strong>Risco: ${nivelRisco}</strong></p>
            </div>
          `;
          wildfireDetalhes.innerHTML = `
            <p style="margin: 5px 0;"><strong>Fonte:</strong> ${wildfire.fonte}</p>
            <p style="margin: 5px 0;">Raio de busca: ~100km</p>
          `;

          // Lista inc√™ndios detalhados
          const incendiosDiv = document.getElementById('incendios-detalhados');
          if (wildfire.detalhes && wildfire.detalhes.length > 0) {
            let html = '<table style="width: 100%; border-collapse: collapse;">';
            html += '<thead><tr style="background: #ecf0f1;"><th style="padding: 10px; text-align: left;">Lat</th><th style="padding: 10px; text-align: left;">Lon</th><th style="padding: 10px; text-align: left;">Brilho</th><th style="padding: 10px; text-align: left;">Confian√ßa</th><th style="padding: 10px; text-align: left;">Data</th></tr></thead>';
            html += '<tbody>';
            wildfire.detalhes.forEach((inc, i) => {
              html += `<tr style="border-bottom: 1px solid #ecf0f1;">
                <td style="padding: 10px;">${inc.latitude.toFixed(4)}</td>
                <td style="padding: 10px;">${inc.longitude.toFixed(4)}</td>
                <td style="padding: 10px;">${inc.brilho.toFixed(1)}</td>
                <td style="padding: 10px;">${inc.confianca.toFixed(1)}%</td>
                <td style="padding: 10px;">${inc.data}</td>
              </tr>`;
            });
            html += '</tbody></table>';
            incendiosDiv.innerHTML = html;
          } else {
            incendiosDiv.innerHTML = '<p style="color: #7f8c8d;">Nenhum inc√™ndio detectado nas proximidades (√∫ltimos 7 dias)</p>';
          }
        } else {
          wildfireStatus.innerHTML = `<p style="background: rgba(255,255,255,0.2); padding: 15px; border-radius: 10px;">‚ùå Dados indispon√≠veis</p>`;
          wildfireDetalhes.innerHTML = `<p style="margin: 5px 0; opacity: 0.8;">${wildfire.erro || 'Erro desconhecido'}</p>`;
        }

        // Atualiza timestamp
        const agora = new Date().toLocaleString('pt-BR');
        document.getElementById('ultima-atualizacao').textContent = `√öltima atualiza√ß√£o: ${agora}`;

      } catch (error) {
        console.error('Erro:', error);
        document.getElementById('loading').style.display = 'none';
        document.getElementById('erro-container').style.display = 'block';
        document.getElementById('erro-mensagem').textContent = error.message;
      }
    }

    // Carrega dados ao iniciar
    carregarDadosNASA();

    // Bot√£o atualizar
    document.addEventListener('DOMContentLoaded', () => {
      const btn = document.getElementById('atualizar-btn');
      if (btn) {
        btn.addEventListener('click', carregarDadosNASA);
      }
    });

